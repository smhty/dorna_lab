!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["Gaussian Splat 3D"]=e["Gaussian Splat 3D"]||{},e.THREE)}(this,(function(e,t){"use strict";function n(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var o=n(t);const s=new o.Vector3,r=new o.Vector3,i=new o.Vector4,a=new o.Vector4,c=new o.Quaternion,l=new o.Quaternion;let h,p;class u{static PositionComponentCount=3;static ScaleComponentCount=3;static RotationComponentCount=4;static ColorComponentCount=4;static CompressionLevels={0:{BytesPerPosition:12,BytesPerScale:12,BytesPerColor:4,BytesPerRotation:16,ScaleRange:1},1:{BytesPerPosition:6,BytesPerScale:6,BytesPerColor:4,BytesPerRotation:8,ScaleRange:32767}};static CovarianceSizeFloats=6;static CovarianceSizeBytes=24;static HeaderSizeBytes=1024;constructor(e){this.headerBufferData=new ArrayBuffer(u.HeaderSizeBytes),this.headerArrayUint8=new Uint8Array(this.headerBufferData),this.headerArrayUint32=new Uint32Array(this.headerBufferData),this.headerArrayFloat32=new Float32Array(this.headerBufferData),this.headerArrayUint8.set(new Uint8Array(e,0,u.HeaderSizeBytes)),this.versionMajor=this.headerArrayUint8[0],this.versionMinor=this.headerArrayUint8[1],this.headerExtraK=this.headerArrayUint8[2],this.compressionLevel=this.headerArrayUint8[3],this.splatCount=this.headerArrayUint32[1],this.bucketSize=this.headerArrayUint32[2],this.bucketCount=this.headerArrayUint32[3],this.bucketBlockSize=this.headerArrayFloat32[4],this.halfBucketBlockSize=this.bucketBlockSize/2,this.bytesPerBucket=this.headerArrayUint32[5],this.compressionScaleRange=this.headerArrayUint32[6]||u.CompressionLevels[this.compressionLevel].ScaleRange,this.compressionScaleFactor=this.halfBucketBlockSize/this.compressionScaleRange;const t=e.byteLength-u.HeaderSizeBytes;this.splatBufferData=new ArrayBuffer(t),new Uint8Array(this.splatBufferData).set(new Uint8Array(e,u.HeaderSizeBytes,t)),this.bytesPerPosition=u.CompressionLevels[this.compressionLevel].BytesPerPosition,this.bytesPerScale=u.CompressionLevels[this.compressionLevel].BytesPerScale,this.bytesPerColor=u.CompressionLevels[this.compressionLevel].BytesPerColor,this.bytesPerRotation=u.CompressionLevels[this.compressionLevel].BytesPerRotation,this.bytesPerSplat=this.bytesPerPosition+this.bytesPerScale+this.bytesPerColor+this.bytesPerRotation,h=this.fbf.bind(this),p=this.tbf.bind(this),this.linkBufferArrays(),this.precomputedCovarianceBufferData=null}linkBufferArrays(){let e=0===this.compressionLevel?Float32Array:Uint16Array;this.positionArray=new e(this.splatBufferData,0,this.splatCount*u.PositionComponentCount),this.scaleArray=new e(this.splatBufferData,this.bytesPerPosition*this.splatCount,this.splatCount*u.ScaleComponentCount),this.colorArray=new Uint8Array(this.splatBufferData,(this.bytesPerPosition+this.bytesPerScale)*this.splatCount,this.splatCount*u.ColorComponentCount),this.rotationArray=new e(this.splatBufferData,(this.bytesPerPosition+this.bytesPerScale+this.bytesPerColor)*this.splatCount,this.splatCount*u.RotationComponentCount),this.bucketsBase=this.splatCount*this.bytesPerSplat}fbf(e){return 0===this.compressionLevel?e:o.DataUtils.fromHalfFloat(e)}tbf(e){return 0===this.compressionLevel?e:o.DataUtils.toHalfFloat(e)}buildPreComputedBuffers(){const e=this.splatCount;this.precomputedCovarianceBufferData=new ArrayBuffer(u.CovarianceSizeBytes*e);const t=new Float32Array(this.precomputedCovarianceBufferData),n=new o.Vector3,s=new o.Quaternion,r=new o.Matrix3,i=new o.Matrix3,a=new o.Matrix3,c=new o.Matrix4;for(let o=0;o<e;o++){const e=o*u.ScaleComponentCount;n.set(h(this.scaleArray[e]),h(this.scaleArray[e+1]),h(this.scaleArray[e+2])),c.makeScale(n.x,n.y,n.z),i.setFromMatrix4(c);const l=o*u.RotationComponentCount;s.set(h(this.rotationArray[l+1]),h(this.rotationArray[l+2]),h(this.rotationArray[l+3]),h(this.rotationArray[l])),c.makeRotationFromQuaternion(s),r.setFromMatrix4(c),a.copy(r).multiply(i);const p=a.elements;t[u.CovarianceSizeFloats*o]=p[0]*p[0]+p[3]*p[3]+p[6]*p[6],t[u.CovarianceSizeFloats*o+1]=p[0]*p[1]+p[3]*p[4]+p[6]*p[7],t[u.CovarianceSizeFloats*o+2]=p[0]*p[2]+p[3]*p[5]+p[6]*p[8],t[u.CovarianceSizeFloats*o+3]=p[1]*p[1]+p[4]*p[4]+p[7]*p[7],t[u.CovarianceSizeFloats*o+4]=p[1]*p[2]+p[4]*p[5]+p[7]*p[8],t[u.CovarianceSizeFloats*o+5]=p[2]*p[2]+p[5]*p[5]+p[8]*p[8]}}getHeaderBufferData(){return this.headerBufferData}getSplatBufferData(){return this.splatBufferData}getPosition(e,t=new o.Vector3){let n=[0,0,0];const s=e*u.PositionComponentCount;if(this.compressionLevel>0){const o=this.compressionScaleFactor,r=this.compressionScaleRange,i=Math.floor(e/this.bucketSize);n=new Float32Array(this.splatBufferData,this.bucketsBase+i*this.bytesPerBucket,3),t.x=(this.positionArray[s]-r)*o+n[0],t.y=(this.positionArray[s+1]-r)*o+n[1],t.z=(this.positionArray[s+2]-r)*o+n[2]}else t.x=this.positionArray[s],t.y=this.positionArray[s+1],t.z=this.positionArray[s+2];return t}setPosition(e,t){let n=[0,0,0];const o=e*u.PositionComponentCount;if(this.compressionLevel>0){const s=1/this.compressionScaleFactor,r=this.compressionScaleRange,i=2*r+1,a=Math.floor(e/this.bucketSize);n=new Float32Array(this.splatBufferData,this.bucketsBase+a*this.bytesPerBucket,3),this.positionArray[o]=clamp(Math.round((t.x-n[0])*s)+r,0,i),this.positionArray[o+1]=clamp(Math.round((t.y-n[1])*s)+r,0,i),this.positionArray[o+2]=clamp(Math.round((t.z-n[2])*s)+r,0,i)}else this.positionArray[o]=t.x,this.positionArray[o+1]=t.y,this.positionArray[o+2]=t.z}getScale(e,t=new o.Vector3){const n=e*u.ScaleComponentCount;return t.set(h(this.scaleArray[n]),h(this.scaleArray[n+1]),h(this.scaleArray[n+2])),t}setScale(e,t){const n=e*u.ScaleComponentCount;this.scaleArray[n]=p(t.x),this.scaleArray[n+1]=p(t.y),this.scaleArray[n+2]=p(t.z)}getRotation(e,t=new o.Quaternion){const n=e*u.RotationComponentCount;return t.set(h(this.rotationArray[n+1]),h(this.rotationArray[n+2]),h(this.rotationArray[n+3]),h(this.rotationArray[n])),t}setRotation(e,t){const n=e*u.RotationComponentCount;this.rotationArray[n]=p(t.w),this.rotationArray[n+1]=p(t.x),this.rotationArray[n+2]=p(t.y),this.rotationArray[n+3]=p(t.z)}getColor(e,t=new o.Vector4){const n=e*u.ColorComponentCount;return t.set(this.colorArray[n],this.colorArray[n+1],this.colorArray[n+2],this.colorArray[n+3]),t}setColor(e,t){const n=e*u.ColorComponentCount;this.colorArray[n]=t.x,this.colorArray[n+1]=t.y,this.colorArray[n+2]=t.z,this.colorArray[n+3]=t.w}getPrecomputedCovarianceBufferData(){return this.precomputedCovarianceBufferData}getSplatCount(){return this.splatCount}fillPositionArray(e){const t=this.splatCount;let n=[0,0,0];for(let o=0;o<t;o++){const t=o*u.PositionComponentCount;if(this.compressionLevel>0){const s=Math.floor(o/this.bucketSize);n=new Float32Array(this.splatBufferData,this.bucketsBase+s*this.bytesPerBucket,3);const r=this.compressionScaleFactor,i=this.compressionScaleRange;e[t]=(this.positionArray[t]-i)*r+n[0],e[t+1]=(this.positionArray[t+1]-i)*r+n[1],e[t+2]=(this.positionArray[t+2]-i)*r+n[2]}else e[t]=this.positionArray[t],e[t+1]=this.positionArray[t+1],e[t+2]=this.positionArray[t+2]}}fillScaleArray(e){const t=this.fbf.bind(this),n=this.splatCount;for(let o=0;o<n;o++){const n=o*u.ScaleComponentCount;e[n]=t(this.scaleArray[n]),e[n+1]=t(this.scaleArray[n+1]),e[n+2]=t(this.scaleArray[n+2])}}fillRotationArray(e){const t=this.fbf.bind(this),n=this.splatCount;for(let o=0;o<n;o++){const n=o*u.RotationComponentCount;e[n]=t(this.rotationArray[n]),e[n+1]=t(this.rotationArray[n+1]),e[n+2]=t(this.rotationArray[n+2]),e[n+3]=t(this.rotationArray[n+3])}}fillColorArray(e){const t=this.splatCount;for(let n=0;n<t;n++){const t=n*u.ColorComponentCount;e[t]=this.colorArray[t],e[t+1]=this.colorArray[t+1],e[t+2]=this.colorArray[t+2],e[t+3]=this.colorArray[t+3]}}swapVertices(e,t){this.getPosition(e,s),this.getPosition(t,r),this.setPosition(t,s),this.setPosition(e,r),this.getScale(e,s),this.getScale(t,r),this.setScale(t,s),this.setScale(e,r),this.getRotation(e,c),this.getRotation(t,l),this.setRotation(t,c),this.setRotation(e,l),this.getColor(e,i),this.getColor(t,a),this.setColor(t,i),this.setColor(e,a)}}!function(){const e=new Float32Array(1),t=new Int32Array(e.buffer)}();const d=function(){const e=new Float32Array(1),t=new Int32Array(e.buffer);return function(n){return e[0]=n,t[0]}}(),m=function(e,t){return new Promise(((n,o)=>{fetch(e).then((async e=>{const s=e.body.getReader();let r=0,i=e.headers.get("Content-Length"),a=i?parseInt(i):void 0;const c=[];for(;;)try{const{value:e,done:o}=await s.read();if(o){t&&t(100,"100%",e);const o=new Blob(c).arrayBuffer();n(o);break}let i,l;r+=e.length,void 0!==a&&(i=r/a*100,l=`${i.toFixed(2)}%`),c.push(e),t&&t(i,l,e)}catch(e){o(e);break}}))}))},f=function(e,t,n){return Math.max(Math.min(e,n),t)},y=function(){return performance.now()/1e3},g=256;class C{constructor(e){this.plyBuffer=e}decodeHeader(e){const t=new TextDecoder;let n=0,o="";for(;;){const s=new Uint8Array(e,n,50);if(o+=t.decode(s),n+=50,o.includes("end_header"))break}const s=o.split("\n");let r=0,i={};for(let e=0;e<s.length;e++){const t=s[e].trim();if(t.startsWith("element vertex")){const e=t.match(/\d+/);e&&(r=parseInt(e[0]))}else if(t.startsWith("property")){const e=t.match(/(\w+)\s+(\w+)\s+(\w+)/);if(e){const t=e[2];i[e[3]]=t}}else if("end_header"===t)break}const a=o.indexOf("end_header")+10+1;return{splatCount:r,propertyTypes:i,vertexData:new DataView(e,a),headerOffset:n}}readRawVertexFast(e,t,n,o,s,r){let i=r||{};for(let r of o){const o=s[r];"float"===o?i[r]=e.getFloat32(t+n[r],!0):"uchar"===o&&(i[r]=e.getUint8(t+n[r])/255)}}parseToSplatBuffer(e=0,t=1){const n=performance.now();console.log("Parsing PLY to SPLAT...");const{splatCount:s,propertyTypes:r,vertexData:i}=this.decodeHeader(this.plyBuffer);let a=0;for(const e in r)e.startsWith("f_rest_")&&(a+=1);const c=a/3;console.log("Detected degree",0,"with ",c,"coefficients per color");const l=[];for(let e=0;e<3;++e)l.push(`f_dc_${e}`);for(let e=0;e<c;++e)for(let t=0;t<3;++t)l.push(`f_rest_${t*c+e}`);let h=0,p={};const d={double:8,int:4,uint:4,float:4,short:2,ushort:2,uchar:1};for(let e in r)if(r.hasOwnProperty(e)){const t=r[e];p[e]=h,h+=d[t]}let m={};const y=["scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3","x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity"],C=[],A={};for(let e of y)A[e]=0;C.push(A);for(let e=0;e<s;e++){let n;if(this.readRawVertexFast(i,e*h,p,y,r,m),n=r.opacity?1/(1+Math.exp(-m.opacity))*255:255,n>t){const e={};for(let t of y)e[t]=m[t];C.push(e)}}console.log("Total valid splats: ",C.length,"out of",s);const w=[];for(let e=0;e<C.length;e++)m=C[e],w.push([m.x,m.y,m.z]);const x=this.computeBuckets(w),v=x.length*g,b=u.HeaderSizeBytes,M=new Uint8Array(new ArrayBuffer(b));M[3]=e,new Uint32Array(M.buffer,4,1)[0]=v;let S=u.CompressionLevels[e].BytesPerPosition,P=u.CompressionLevels[e].BytesPerScale,D=u.CompressionLevels[e].BytesPerColor,T=u.CompressionLevels[e].BytesPerRotation;const B=new ArrayBuffer(S*v),z=new ArrayBuffer(P*v),E=new ArrayBuffer(D*v),I=new ArrayBuffer(T*v),L=u.CompressionLevels[e].ScaleRange,R=L/2.5,V=2*L+1,F=new o.Vector3,U=new o.Vector3;let O=0;for(let t=0;t<x.length;t++){const n=x[t];F.fromArray(n.center);for(let t=0;t<n.splats.length;t++){let s=n.splats[t],i=!1;if(0===s&&(i=!0),m=C[s],0===e){const e=new Float32Array(B,O*S,3),t=new Float32Array(z,O*P,3),n=new Float32Array(I,O*T,4);if(r.scale_0){const e=new o.Quaternion(m.rot_1,m.rot_2,m.rot_3,m.rot_0);e.normalize(),n.set([e.w,e.x,e.y,e.z]),t.set([Math.exp(m.scale_0),Math.exp(m.scale_1),Math.exp(m.scale_2)])}else t.set([.01,.01,.01]),n.set([1,0,0,0]);e.set([m.x,m.y,m.z])}else{const e=new Uint16Array(B,O*S,3),t=new Uint16Array(z,O*P,3),n=new Uint16Array(I,O*T,4),s=o.DataUtils.toHalfFloat.bind(o.DataUtils);if(r.scale_0){const e=new o.Quaternion(m.rot_1,m.rot_2,m.rot_3,m.rot_0);e.normalize(),n.set([s(e.w),s(e.x),s(e.y),s(e.z)]),t.set([s(Math.exp(m.scale_0)),s(Math.exp(m.scale_1)),s(Math.exp(m.scale_2))])}else t.set([s(.01),s(.01),s(.01)]),n.set([s(1),0,0,0]);U.set(m.x,m.y,m.z).sub(F),U.x=Math.round(U.x*R)+L,U.x=f(U.x,0,V),U.y=Math.round(U.y*R)+L,U.y=f(U.y,0,V),U.z=Math.round(U.z*R)+L,U.z=f(U.z,0,V),e.set([U.x,U.y,U.z])}const a=new Uint8ClampedArray(E,O*D,4);if(i)a[0]=255,a[1]=0,a[2]=0,a[3]=0;else{if(r.f_dc_0){const e=.28209479177387814;a.set([255*(.5+e*m.f_dc_0),255*(.5+e*m.f_dc_1),255*(.5+e*m.f_dc_2)])}else a.set([255,0,0]);r.opacity?a[3]=1/(1+Math.exp(-m.opacity))*255:a[3]=255}O++}}const k=12*x.length,_=B.byteLength+z.byteLength+E.byteLength+I.byteLength,N=new Uint32Array(M.buffer),j=new Float32Array(M.buffer);let H=b+_;e>0&&(H+=k,N[2]=g,N[3]=x.length,j[4]=5,N[5]=12,N[6]=u.CompressionLevels[e].ScaleRange);const W=new ArrayBuffer(H);if(new Uint8Array(W,0,b).set(M),new Uint8Array(W,b,B.byteLength).set(new Uint8Array(B)),new Uint8Array(W,b+B.byteLength,z.byteLength).set(new Uint8Array(z)),new Uint8Array(W,b+B.byteLength+z.byteLength,E.byteLength).set(new Uint8Array(E)),new Uint8Array(W,b+B.byteLength+z.byteLength+E.byteLength,I.byteLength).set(new Uint8Array(I)),e>0){const e=new Float32Array(W,b+_,3*x.length);for(let t=0;t<x.length;t++){const n=x[t],o=3*t;e[o]=n.center[0],e[o+1]=n.center[1],e[o+2]=n.center[2]}}const Y=new u(W),Q=performance.now();return console.log("Parsing PLY to SPLAT complete!"),console.log("Total time: ",(Q-n).toFixed(2)+" ms"),Y}computeBuckets(e){const t=e.length,n=new o.Vector3,s=new o.Vector3;for(let o=1;o<t;o++){const t=e[o];(0===o||t[0]<n.x)&&(n.x=t[0]),(0===o||t[0]>s.x)&&(s.x=t[0]),(0===o||t[1]<n.y)&&(n.y=t[1]),(0===o||t[1]>s.y)&&(s.y=t[1]),(0===o||t[2]<n.z)&&(n.z=t[2]),(0===o||t[2]>s.z)&&(s.z=t[2])}const r=(new o.Vector3).copy(s).sub(n),i=Math.ceil(r.y/5),a=Math.ceil(r.z/5),c=new o.Vector3,l=[],h={};for(let o=1;o<t;o++){const t=e[o],s=Math.ceil((t[0]-n.x)/5),r=Math.ceil((t[1]-n.y)/5),p=Math.ceil((t[2]-n.z)/5);c.x=5*(s-1)+n.x+2.5,c.y=5*(r-1)+n.y+2.5,c.z=5*(p-1)+n.z+2.5;const u=s*(i*a)+r*a+p;let d=h[u];d||(h[u]=d={splats:[],center:c.toArray()}),d.splats.push(o),d.splats.length>=g&&(l.push(d),h[u]=null)}for(let e in h)if(h.hasOwnProperty(e)){const t=h[e];if(t){for(;t.splats.length<g;)t.splats.push(0);l.push(t)}}return l}}class A{constructor(){this.splatBuffer=null}fetchFile(e,t){return new Promise(((n,o)=>{m(e,t).then((e=>{n(e)})).catch((e=>{o(e)}))}))}loadFromURL(e,t=0,n=1){return new Promise(((o,s)=>{this.fetchFile(e).then((e=>{const s=new C(e).parseToSplatBuffer(t,n);this.splatBuffer=s,o(s)})).catch((e=>{s(e)}))}))}}class w{constructor(e=null){this.splatBuffer=e,this.downLoadLink=null}loadFromURL(e,t){return new Promise(((n,o)=>{m(e,t).then((e=>{const t=new u(e);n(t)})).catch((e=>{o(e)}))}))}setFromBuffer(e){this.splatBuffer=e}downloadFile(e){const t=new Uint8Array(this.splatBuffer.getHeaderBufferData()),n=new Uint8Array(this.splatBuffer.getSplatBufferData()),o=new Blob([t.buffer,n.buffer],{type:"application/octet-stream"});this.downLoadLink||(this.downLoadLink=document.createElement("a"),document.body.appendChild(this.downLoadLink)),this.downLoadLink.download=e,this.downLoadLink.href=URL.createObjectURL(o),this.downLoadLink.click()}}const x={type:"change"},v={type:"start"},b={type:"end"},M=new t.Ray,S=new t.Plane,P=Math.cos(70*t.MathUtils.DEG2RAD);class D extends t.EventDispatcher{constructor(e,n){super(),this.object=e,this.domElement=n,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new t.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:t.MOUSE.ROTATE,MIDDLE:t.MOUSE.DOLLY,RIGHT:t.MOUSE.PAN},this.touches={ONE:t.TOUCH.ROTATE,TWO:t.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",J),this._domElementKeyEvents=e},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",J),this._domElementKeyEvents=null},this.saveState=function(){o.target0.copy(o.target),o.position0.copy(o.object.position),o.zoom0=o.object.zoom},this.reset=function(){o.target.copy(o.target0),o.object.position.copy(o.position0),o.object.zoom=o.zoom0,o.object.updateProjectionMatrix(),o.dispatchEvent(x),o.update(),r=s.NONE},this.update=function(){const n=new t.Vector3,p=(new t.Quaternion).setFromUnitVectors(e.up,new t.Vector3(0,1,0)),u=p.clone().invert(),d=new t.Vector3,m=new t.Quaternion,f=new t.Vector3,y=2*Math.PI;return function(){const g=o.object.position;n.copy(g).sub(o.target),n.applyQuaternion(p),a.setFromVector3(n),o.autoRotate&&r===s.NONE&&I(2*Math.PI/60/60*o.autoRotateSpeed),o.enableDamping?(a.theta+=c.theta*o.dampingFactor,a.phi+=c.phi*o.dampingFactor):(a.theta+=c.theta,a.phi+=c.phi);let C=o.minAzimuthAngle,A=o.maxAzimuthAngle;isFinite(C)&&isFinite(A)&&(C<-Math.PI?C+=y:C>Math.PI&&(C-=y),A<-Math.PI?A+=y:A>Math.PI&&(A-=y),a.theta=C<=A?Math.max(C,Math.min(A,a.theta)):a.theta>(C+A)/2?Math.max(C,a.theta):Math.min(A,a.theta)),a.phi=Math.max(o.minPolarAngle,Math.min(o.maxPolarAngle,a.phi)),a.makeSafe(),!0===o.enableDamping?o.target.addScaledVector(h,o.dampingFactor):o.target.add(h),o.zoomToCursor&&T||o.object.isOrthographicCamera?a.radius=_(a.radius):a.radius=_(a.radius*l),n.setFromSpherical(a),n.applyQuaternion(u),g.copy(o.target).add(n),o.object.lookAt(o.target),!0===o.enableDamping?(c.theta*=1-o.dampingFactor,c.phi*=1-o.dampingFactor,h.multiplyScalar(1-o.dampingFactor)):(c.set(0,0,0),h.set(0,0,0));let v=!1;if(o.zoomToCursor&&T){let s=null;if(o.object.isPerspectiveCamera){const e=n.length();s=_(e*l);const t=e-s;o.object.position.addScaledVector(w,t),o.object.updateMatrixWorld()}else if(o.object.isOrthographicCamera){const e=new t.Vector3(D.x,D.y,0);e.unproject(o.object),o.object.zoom=Math.max(o.minZoom,Math.min(o.maxZoom,o.object.zoom/l)),o.object.updateProjectionMatrix(),v=!0;const r=new t.Vector3(D.x,D.y,0);r.unproject(o.object),o.object.position.sub(r).add(e),o.object.updateMatrixWorld(),s=n.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),o.zoomToCursor=!1;null!==s&&(this.screenSpacePanning?o.target.set(0,0,-1).transformDirection(o.object.matrix).multiplyScalar(s).add(o.object.position):(M.origin.copy(o.object.position),M.direction.set(0,0,-1).transformDirection(o.object.matrix),Math.abs(o.object.up.dot(M.direction))<P?e.lookAt(o.target):(S.setFromNormalAndCoplanarPoint(o.object.up,o.target),M.intersectPlane(S,o.target))))}else o.object.isOrthographicCamera&&(o.object.zoom=Math.max(o.minZoom,Math.min(o.maxZoom,o.object.zoom/l)),o.object.updateProjectionMatrix(),v=!0);return l=1,T=!1,!!(v||d.distanceToSquared(o.object.position)>i||8*(1-m.dot(o.object.quaternion))>i||f.distanceToSquared(o.target)>0)&&(o.dispatchEvent(x),d.copy(o.object.position),m.copy(o.object.quaternion),f.copy(o.target),v=!1,!0)}}(),this.dispose=function(){o.domElement.removeEventListener("contextmenu",ee),o.domElement.removeEventListener("pointerdown",X),o.domElement.removeEventListener("pointercancel",$),o.domElement.removeEventListener("wheel",q),o.domElement.removeEventListener("pointermove",Z),o.domElement.removeEventListener("pointerup",$),null!==o._domElementKeyEvents&&(o._domElementKeyEvents.removeEventListener("keydown",J),o._domElementKeyEvents=null)};const o=this,s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=s.NONE;const i=1e-6,a=new t.Spherical,c=new t.Spherical;let l=1;const h=new t.Vector3,p=new t.Vector2,u=new t.Vector2,d=new t.Vector2,m=new t.Vector2,f=new t.Vector2,y=new t.Vector2,g=new t.Vector2,C=new t.Vector2,A=new t.Vector2,w=new t.Vector3,D=new t.Vector2;let T=!1;const B=[],z={};function E(){return Math.pow(.95,o.zoomSpeed)}function I(e){c.theta-=e}function L(e){c.phi-=e}const R=function(){const e=new t.Vector3;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),h.add(e)}}(),V=function(){const e=new t.Vector3;return function(t,n){!0===o.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(o.object.up,e)),e.multiplyScalar(t),h.add(e)}}(),F=function(){const e=new t.Vector3;return function(t,n){const s=o.domElement;if(o.object.isPerspectiveCamera){const r=o.object.position;e.copy(r).sub(o.target);let i=e.length();i*=Math.tan(o.object.fov/2*Math.PI/180),R(2*t*i/s.clientHeight,o.object.matrix),V(2*n*i/s.clientHeight,o.object.matrix)}else o.object.isOrthographicCamera?(R(t*(o.object.right-o.object.left)/o.object.zoom/s.clientWidth,o.object.matrix),V(n*(o.object.top-o.object.bottom)/o.object.zoom/s.clientHeight,o.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),o.enablePan=!1)}}();function U(e){o.object.isPerspectiveCamera||o.object.isOrthographicCamera?l/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),o.enableZoom=!1)}function O(e){o.object.isPerspectiveCamera||o.object.isOrthographicCamera?l*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),o.enableZoom=!1)}function k(t){if(!o.zoomToCursor)return;T=!0;const n=o.domElement.getBoundingClientRect(),s=t.clientX-n.left,r=t.clientY-n.top,i=n.width,a=n.height;D.x=s/i*2-1,D.y=-r/a*2+1,w.set(D.x,D.y,1).unproject(e).sub(e.position).normalize()}function _(e){return Math.max(o.minDistance,Math.min(o.maxDistance,e))}function N(e){p.set(e.clientX,e.clientY)}function j(e){m.set(e.clientX,e.clientY)}function H(){if(1===B.length)p.set(B[0].pageX,B[0].pageY);else{const e=.5*(B[0].pageX+B[1].pageX),t=.5*(B[0].pageY+B[1].pageY);p.set(e,t)}}function W(){if(1===B.length)m.set(B[0].pageX,B[0].pageY);else{const e=.5*(B[0].pageX+B[1].pageX),t=.5*(B[0].pageY+B[1].pageY);m.set(e,t)}}function Y(){const e=B[0].pageX-B[1].pageX,t=B[0].pageY-B[1].pageY,n=Math.sqrt(e*e+t*t);g.set(0,n)}function Q(e){if(1==B.length)u.set(e.pageX,e.pageY);else{const t=ne(e),n=.5*(e.pageX+t.x),o=.5*(e.pageY+t.y);u.set(n,o)}d.subVectors(u,p).multiplyScalar(o.rotateSpeed);const t=o.domElement;I(2*Math.PI*d.x/t.clientHeight),L(2*Math.PI*d.y/t.clientHeight),p.copy(u)}function G(e){if(1===B.length)f.set(e.pageX,e.pageY);else{const t=ne(e),n=.5*(e.pageX+t.x),o=.5*(e.pageY+t.y);f.set(n,o)}y.subVectors(f,m).multiplyScalar(o.panSpeed),F(y.x,y.y),m.copy(f)}function K(e){const t=ne(e),n=e.pageX-t.x,s=e.pageY-t.y,r=Math.sqrt(n*n+s*s);C.set(0,r),A.set(0,Math.pow(C.y/g.y,o.zoomSpeed)),U(A.y),g.copy(C)}function X(e){!1!==o.enabled&&(0===B.length&&(o.domElement.setPointerCapture(e.pointerId),o.domElement.addEventListener("pointermove",Z),o.domElement.addEventListener("pointerup",$)),function(e){B.push(e)}(e),"touch"===e.pointerType?function(e){switch(te(e),B.length){case 1:switch(o.touches.ONE){case t.TOUCH.ROTATE:if(!1===o.enableRotate)return;H(),r=s.TOUCH_ROTATE;break;case t.TOUCH.PAN:if(!1===o.enablePan)return;W(),r=s.TOUCH_PAN;break;default:r=s.NONE}break;case 2:switch(o.touches.TWO){case t.TOUCH.DOLLY_PAN:if(!1===o.enableZoom&&!1===o.enablePan)return;o.enableZoom&&Y(),o.enablePan&&W(),r=s.TOUCH_DOLLY_PAN;break;case t.TOUCH.DOLLY_ROTATE:if(!1===o.enableZoom&&!1===o.enableRotate)return;o.enableZoom&&Y(),o.enableRotate&&H(),r=s.TOUCH_DOLLY_ROTATE;break;default:r=s.NONE}break;default:r=s.NONE}r!==s.NONE&&o.dispatchEvent(v)}(e):function(e){let n;switch(e.button){case 0:n=o.mouseButtons.LEFT;break;case 1:n=o.mouseButtons.MIDDLE;break;case 2:n=o.mouseButtons.RIGHT;break;default:n=-1}switch(n){case t.MOUSE.DOLLY:if(!1===o.enableZoom)return;!function(e){k(e),g.set(e.clientX,e.clientY)}(e),r=s.DOLLY;break;case t.MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===o.enablePan)return;j(e),r=s.PAN}else{if(!1===o.enableRotate)return;N(e),r=s.ROTATE}break;case t.MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===o.enableRotate)return;N(e),r=s.ROTATE}else{if(!1===o.enablePan)return;j(e),r=s.PAN}break;default:r=s.NONE}r!==s.NONE&&o.dispatchEvent(v)}(e))}function Z(e){!1!==o.enabled&&("touch"===e.pointerType?function(e){switch(te(e),r){case s.TOUCH_ROTATE:if(!1===o.enableRotate)return;Q(e),o.update();break;case s.TOUCH_PAN:if(!1===o.enablePan)return;G(e),o.update();break;case s.TOUCH_DOLLY_PAN:if(!1===o.enableZoom&&!1===o.enablePan)return;!function(e){o.enableZoom&&K(e),o.enablePan&&G(e)}(e),o.update();break;case s.TOUCH_DOLLY_ROTATE:if(!1===o.enableZoom&&!1===o.enableRotate)return;!function(e){o.enableZoom&&K(e),o.enableRotate&&Q(e)}(e),o.update();break;default:r=s.NONE}}(e):function(e){switch(r){case s.ROTATE:if(!1===o.enableRotate)return;!function(e){u.set(e.clientX,e.clientY),d.subVectors(u,p).multiplyScalar(o.rotateSpeed);const t=o.domElement;I(2*Math.PI*d.x/t.clientHeight),L(2*Math.PI*d.y/t.clientHeight),p.copy(u),o.update()}(e);break;case s.DOLLY:if(!1===o.enableZoom)return;!function(e){C.set(e.clientX,e.clientY),A.subVectors(C,g),A.y>0?U(E()):A.y<0&&O(E()),g.copy(C),o.update()}(e);break;case s.PAN:if(!1===o.enablePan)return;!function(e){f.set(e.clientX,e.clientY),y.subVectors(f,m).multiplyScalar(o.panSpeed),F(y.x,y.y),m.copy(f),o.update()}(e)}}(e))}function $(e){!function(e){delete z[e.pointerId];for(let t=0;t<B.length;t++)if(B[t].pointerId==e.pointerId)return void B.splice(t,1)}(e),0===B.length&&(o.domElement.releasePointerCapture(e.pointerId),o.domElement.removeEventListener("pointermove",Z),o.domElement.removeEventListener("pointerup",$)),o.dispatchEvent(b),r=s.NONE}function q(e){!1!==o.enabled&&!1!==o.enableZoom&&r===s.NONE&&(e.preventDefault(),o.dispatchEvent(v),function(e){k(e),e.deltaY<0?O(E()):e.deltaY>0&&U(E()),o.update()}(e),o.dispatchEvent(b))}function J(e){!1!==o.enabled&&!1!==o.enablePan&&function(e){let t=!1;switch(e.code){case o.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?L(2*Math.PI*o.rotateSpeed/o.domElement.clientHeight):F(0,o.keyPanSpeed),t=!0;break;case o.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?L(-2*Math.PI*o.rotateSpeed/o.domElement.clientHeight):F(0,-o.keyPanSpeed),t=!0;break;case o.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?I(2*Math.PI*o.rotateSpeed/o.domElement.clientHeight):F(o.keyPanSpeed,0),t=!0;break;case o.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?I(-2*Math.PI*o.rotateSpeed/o.domElement.clientHeight):F(-o.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),o.update())}(e)}function ee(e){!1!==o.enabled&&e.preventDefault()}function te(e){let n=z[e.pointerId];void 0===n&&(n=new t.Vector2,z[e.pointerId]=n),n.set(e.pageX,e.pageY)}function ne(e){const t=e.pointerId===B[0].pointerId?B[1]:B[0];return z[t.pointerId]}o.domElement.addEventListener("contextmenu",ee),o.domElement.addEventListener("pointerdown",X),o.domElement.addEventListener("pointercancel",$),o.domElement.addEventListener("wheel",q,{passive:!1}),this.update()}}class T{constructor(e){this.message=e||"Loading...",this.spinnerDivContainer=document.createElement("div"),this.spinnerDiv=document.createElement("div"),this.messageDiv=document.createElement("div"),this.spinnerDivContainer.className="loaderContainer",this.spinnerDiv.className="loader",this.spinnerDivContainer.style.display="none",this.messageDiv.className="message",this.messageDiv.innerHTML=this.message,this.spinnerDivContainer.appendChild(this.spinnerDiv),this.spinnerDivContainer.appendChild(this.messageDiv),document.body.appendChild(this.spinnerDivContainer);const t=document.createElement("style");t.innerHTML="\n\n            .message {\n                font-family: arial;\n                font-size: 12pt;\n                color: #ffffff;\n                text-align: center;\n                padding-top:15px;\n                width:180px;\n            }\n\n            .loaderContainer {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-80px, -80px);\n                width: 180px;\n            }\n\n            .loader {\n                width: 120px;        /* the size */\n                padding: 15px;       /* the border thickness */\n                background: #07e8d6; /* the color */\n                z-index:99999;\n            \n                aspect-ratio: 1;\n                border-radius: 50%;\n                --_m: \n                    conic-gradient(#0000,#000),\n                    linear-gradient(#000 0 0) content-box;\n                -webkit-mask: var(--_m);\n                    mask: var(--_m);\n                -webkit-mask-composite: source-out;\n                    mask-composite: subtract;\n                box-sizing: border-box;\n                animation: load 1s linear infinite;\n                margin-left: 30px;\n            }\n            \n            @keyframes load {\n                to{transform: rotate(1turn)}\n            }\n\n        ",document.getElementsByTagName("head")[0].appendChild(t)}show(){this.spinnerDivContainer.style.display="block"}hide(){this.spinnerDivContainer.style.display="none"}setMessage(e){this.messageDiv.innerHTML=e}}class B{constructor(e,t){this.scene=e,this.simpleScene=t,this.meshCursor=null}setupMeshCursor(){if(!this.meshCursor){const e=new o.ConeGeometry(.5,1.5,32),t=new o.MeshBasicMaterial({color:16777215}),n=new o.Mesh(e,t);n.rotation.set(0,0,Math.PI),n.position.set(0,1,0);const s=new o.Mesh(e,t);s.position.set(0,-1,0);const r=new o.Mesh(e,t);r.rotation.set(0,0,Math.PI/2),r.position.set(1,0,0);const i=new o.Mesh(e,t);i.rotation.set(0,0,-Math.PI/2),i.position.set(-1,0,0),this.meshCursor=new o.Object3D,this.meshCursor.add(n),this.meshCursor.add(s),this.meshCursor.add(r),this.meshCursor.add(i),this.meshCursor.scale.set(.1,.1,.1),this.simpleScene.add(this.meshCursor),this.meshCursor.visible=!1}}destroyMeshCursor(){this.meshCursor&&(this.meshCursor.children.forEach((e=>{e.geometry.dispose(),e.material.dispose()})),this.simpleScene.remove(this.meshCursor),this.meshCursor=null)}setMeshCursorVisibility(e){this.meshCursor.visible=e}setMeshCursorPosition(e){this.meshCursor.position.copy(e)}positionAndOrientMeshCursor(e,t){this.meshCursor.position.copy(e),this.meshCursor.up.copy(t.up),this.meshCursor.lookAt(t.position)}addDebugMeshes(){this.debugRoot=this.createDebugMeshes(),this.secondaryDebugRoot=this.createSecondaryDebugMeshes(),this.simpleScene.add(this.debugRoot),this.simpleScene.add(this.secondaryDebugRoot)}createDebugMeshes(e){const t=new o.SphereGeometry(1,32,32),n=new o.Object3D,s=(s,r)=>{let i=new o.Mesh(t,B.buildDebugMaterial(s));i.renderOrder=e,n.add(i),i.position.fromArray(r)};return s(16711680,[-50,0,0]),s(16711680,[50,0,0]),s(65280,[0,0,-50]),s(65280,[0,0,50]),s(16755200,[5,0,5]),n}createSecondaryDebugMeshes(e){const t=new o.BoxGeometry(3,3,3),n=new o.Object3D;const s=s=>{let r=new o.Mesh(t,B.buildDebugMaterial(12303291));r.renderOrder=e,n.add(r),r.position.fromArray(s)};let r=10;return s([-10,0,-10]),s([-10,0,r]),s([r,0,-10]),s([r,0,r]),n}static buildDebugMaterial(e){const t={color:{type:"v3",value:new o.Color(e)}},n=new o.ShaderMaterial({uniforms:t,vertexShader:"\n            #include <common>\n            varying float ndcDepth;\n\n            void main() {\n                gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position.xyz, 1.0);\n                ndcDepth = gl_Position.z / gl_Position.w;\n                gl_Position.x = gl_Position.x / gl_Position.w;\n                gl_Position.y = gl_Position.y / gl_Position.w;\n                gl_Position.z = 0.0;\n                gl_Position.w = 1.0;\n    \n            }\n        ",fragmentShader:"\n            #include <common>\n            uniform vec3 color;\n            varying float ndcDepth;\n            void main() {\n                gl_FragDepth = (ndcDepth + 1.0) / 2.0;\n                gl_FragColor = vec4(color.rgb, 0.0);\n            }\n        ",transparent:!1,depthTest:!0,depthWrite:!0,side:o.FrontSide});return n.extensions.fragDepth=!0,n}}const z=new o.Vector3(1,0,0),E=new o.Vector3(0,1,0),I=new o.Vector3(0,0,1);class L{constructor(e=new o.Vector3,t=new o.Vector3){this.origin=new o.Vector3,this.direction=new o.Vector3,this.setParameters(e,t)}setParameters(e,t){this.origin.copy(e),this.direction.copy(t).normalize()}boxContainsPoint(e,t,n){return!(t.x<e.min.x-n||t.x>e.max.x+n||t.y<e.min.y-n||t.y>e.max.y+n||t.z<e.min.z-n||t.z>e.max.z+n)}intersectBox=function(){const e=new o.Vector3,t=[],n=[],s=[];return function(o,r){if(n[0]=this.origin.x,n[1]=this.origin.y,n[2]=this.origin.z,s[0]=this.direction.x,s[1]=this.direction.y,s[2]=this.direction.z,this.boxContainsPoint(o,this.origin,1e-4))return r&&(r.origin.copy(this.origin),r.normal.set(0,0,0),r.distance=-1),!0;for(let i=0;i<3;i++){if(0==s[i])continue;const a=0==i?z:1==i?E:I,c=s[i]<0?o.max:o.min;let l=-Math.sign(s[i]);t[0]=0==i?c.x:1==i?c.y:c.z;let h=t[0]-n[i];if(h*l<0){const c=(i+1)%3,p=(i+2)%3;if(t[2]=s[c]/s[i]*h+n[c],t[1]=s[p]/s[i]*h+n[p],e.set(t[i],t[p],t[c]),this.boxContainsPoint(o,e,1e-4))return r&&(r.origin.copy(e),r.normal.copy(a).multiplyScalar(l),r.distance=e.sub(this.origin).length()),!0}}return!1}}();intersectSphere=function(){const e=new o.Vector3;return function(t,n,o){e.copy(t).sub(this.origin);const s=e.dot(this.direction),r=s*s,i=e.dot(e)-r,a=n*n;if(i>a)return!1;const c=Math.sqrt(a-i),l=s-c,h=s+c;if(h<0)return!1;let p=l<0?h:l;return o&&(o.origin.copy(this.origin).addScaledVector(this.direction,p),o.normal.copy(o.origin).sub(t).normalize(),o.distance=p),!0}}()}class R{constructor(){this.origin=new o.Vector3,this.normal=new o.Vector3,this.distance=0}set(e,t,n){this.origin.copy(e),this.normal.copy(t),this.distance=n}clone(){const e=new R;return e.origin.copy(this.origin),e.normal.copy(this.normal),e.distance=this.distance,e}}class V{constructor(e,t){this.ray=new L(e,t)}setFromCameraAndScreenPosition=function(){const e=new o.Vector2;return function(t,n,o){if(e.x=n.x/o.x*2-1,e.y=(o.y-n.y)/o.y*2-1,t.isPerspectiveCamera)this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t;else{if(!t.isOrthographicCamera)throw new Error("Raycaster::setFromCameraAndScreenPosition() -> Unsupported camera type");this.ray.origin.set(n.x,n.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t}}}();intersectSplatMesh=function(){const e=new o.Matrix4,t=new o.Matrix4,n=new L;return function(o,s=[]){t.copy(o.matrixWorld),e.copy(t).invert(),n.origin.copy(this.ray.origin).applyMatrix4(e),n.direction.copy(this.ray.direction).transformDirection(e);const r=o.getSplatTree();return r.rootNode&&this.castRayAtSplatTreeNode(n,r,r.rootNode,s),s.sort(((e,t)=>e.distance>t.distance?1:-1)),s.forEach((e=>{e.origin.applyMatrix4(t),e.normal.transformDirection(t)})),s}}();castRayAtSplatTreeNode=function(){const e=new o.Vector3,t=new o.Vector3,n=new o.Quaternion,s=new R;return function(o,r,i,a=[]){if(o.intersectBox(i.boundingBox)){if(i.data.indexes&&i.data.indexes.length>0)for(let c=0;c<i.data.indexes.length;c++){const l=i.data.indexes[c];r.splatBuffer.getPosition(l,e),r.splatBuffer.getRotation(l,n),r.splatBuffer.getScale(l,t);const h=Math.max(Math.max(t.x,t.y),t.z);o.intersectSphere(e,h,s)&&a.push(s.clone())}if(i.children&&i.children.length>0)for(let e of i.children)this.castRayAtSplatTreeNode(o,r,e,a);return a}}}()}let F=0;class U{constructor(e,t,n,s){this.min=(new o.Vector3).copy(e),this.max=(new o.Vector3).copy(t),this.boundingBox=new o.Box3(this.min,this.max),this.center=(new o.Vector3).copy(this.max).sub(this.min).multiplyScalar(.5).add(this.min),this.depth=n,this.children=[],this.data=null,this.id=s||F++}}class O{constructor(e,t){this.maxDepth=e,this.maxPositionsPerNode=t,this.splatBuffer=null,this.sceneDimensions=new o.Vector3,this.sceneMin=new o.Vector3,this.sceneMax=new o.Vector3,this.rootNode=null,this.addedIndexes={},this.nodesWithIndexes=[]}processSplatBuffer(e,t=(()=>!0)){this.splatBuffer=e,this.addedIndexes={},this.nodesWithIndexes=[];const n=e.getSplatCount(),s=new o.Vector3;for(let o=0;o<n;o++)t(o)&&(e.getPosition(o,s),(0===o||s.x<this.sceneMin.x)&&(this.sceneMin.x=s.x),(0===o||s.x>this.sceneMax.x)&&(this.sceneMax.x=s.x),(0===o||s.y<this.sceneMin.y)&&(this.sceneMin.y=s.y),(0===o||s.y>this.sceneMax.y)&&(this.sceneMax.y=s.y),(0===o||s.z<this.sceneMin.z)&&(this.sceneMin.z=s.z),(0===o||s.z>this.sceneMax.z)&&(this.sceneMax.z=s.z));this.sceneDimensions.copy(this.sceneMin).sub(this.sceneMin);const r=[];for(let e=0;e<n;e++)t(e)&&r.push(e);this.rootNode=new U(this.sceneMin,this.sceneMax,0),this.rootNode.data={indexes:r},this.processNode(this.rootNode,e)}processNode(e,t){const n=e.data.indexes.length;if(n<this.maxPositionsPerNode||e.depth>this.maxDepth){const t=[];for(let n=0;n<e.data.indexes.length;n++)this.addedIndexes[e.data.indexes[n]]||(t.push(e.data.indexes[n]),this.addedIndexes[e.data.indexes[n]]=!0);return e.data.indexes=t,void this.nodesWithIndexes.push(e)}const s=(new o.Vector3).copy(e.max).sub(e.min),r=(new o.Vector3).copy(s).multiplyScalar(.5),i=(new o.Vector3).copy(e.min).add(r),a=[new o.Box3(new o.Vector3(i.x-r.x,i.y,i.z-r.z),new o.Vector3(i.x,i.y+r.y,i.z)),new o.Box3(new o.Vector3(i.x,i.y,i.z-r.z),new o.Vector3(i.x+r.x,i.y+r.y,i.z)),new o.Box3(new o.Vector3(i.x,i.y,i.z),new o.Vector3(i.x+r.x,i.y+r.y,i.z+r.z)),new o.Box3(new o.Vector3(i.x-r.x,i.y,i.z),new o.Vector3(i.x,i.y+r.y,i.z+r.z)),new o.Box3(new o.Vector3(i.x-r.x,i.y-r.y,i.z-r.z),new o.Vector3(i.x,i.y,i.z)),new o.Box3(new o.Vector3(i.x,i.y-r.y,i.z-r.z),new o.Vector3(i.x+r.x,i.y,i.z)),new o.Box3(new o.Vector3(i.x,i.y-r.y,i.z),new o.Vector3(i.x+r.x,i.y,i.z+r.z)),new o.Box3(new o.Vector3(i.x-r.x,i.y-r.y,i.z),new o.Vector3(i.x,i.y,i.z+r.z))],c=[],l=[];for(let e=0;e<a.length;e++)c[e]=0,l[e]=[];const h=new o.Vector3;for(let o=0;o<n;o++){const n=e.data.indexes[o];t.getPosition(n,h);for(let e=0;e<a.length;e++)a[e].containsPoint(h)&&(c[e]++,l[e].push(n))}for(let t=0;t<a.length;t++){const n=new U(a[t].min,a[t].max,e.depth+1);n.data={indexes:l[t]},e.children.push(n)}e.data={};for(let n of e.children)this.processNode(n,t)}countLeaves(){let e=0;return this.visitLeaves((()=>{e++})),e}visitLeaves(e){const t=(e,n)=>{0===e.children.length&&n(e);for(let o of e.children)t(o,n)};return t(this.rootNode,e)}}class k extends o.Mesh{static buildMesh(e,t=1,n=!1){const o=k.buildGeomtery(e),s=k.buildMaterial();return new k(e,o,s,t,n)}constructor(e,t,n,o=1,s=!1){super(t,n),this.splatBuffer=e,this.geometry=t,this.material=n,this.splatTree=null,this.splatDataTextures=null,this.splatAlphaRemovalThreshold=o,this.halfPrecisionCovariancesOnGPU=s,this.buildSplatTree(),this.resetLocalSplatDataAndTexturesFromSplatBuffer()}static buildMaterial(){const e={covariancesTexture:{type:"t",value:null},centersColorsTexture:{type:"t",value:null},focal:{type:"v2",value:new o.Vector2},viewport:{type:"v2",value:new o.Vector2},debugColor:{type:"v3",value:new o.Color},covariancesTextureSize:{type:"v2",value:new o.Vector2(1024,1024)},centersColorsTextureSize:{type:"v2",value:new o.Vector2(1024,1024)}};return new o.ShaderMaterial({uniforms:e,vertexShader:"\n            precision highp float;\n            #include <common>\n\n            attribute uint splatIndex;\n\n            uniform highp sampler2D covariancesTexture;\n            uniform highp usampler2D centersColorsTexture;\n            uniform vec2 focal;\n            uniform vec2 viewport;\n            uniform vec2 covariancesTextureSize;\n            uniform vec2 centersColorsTextureSize;\n\n            varying vec4 vColor;\n            varying vec2 vUv;\n\n            varying vec2 vPosition;\n\n            const vec4 encodeNorm4 = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0);\n            const uvec4 mask4 = uvec4(uint(0x000000FF), uint(0x0000FF00), uint(0x00FF0000), uint(0xFF000000));\n            const uvec4 shift4 = uvec4(0, 8, 16, 24);\n            vec4 uintToRGBAVec (uint u) {\n               uvec4 urgba = mask4 & u;\n               urgba = urgba >> shift4;\n               vec4 rgba = vec4(urgba) * encodeNorm4;\n               return rgba;\n            }\n\n            vec2 getDataUV(in int stride, in int offset, in vec2 dimensions) {\n                vec2 samplerUV = vec2(0.0, 0.0);\n                float d = float(splatIndex * uint(stride) + uint(offset)) / dimensions.x;\n                samplerUV.y = float(floor(d)) / dimensions.y;\n                samplerUV.x = fract(d);\n                return samplerUV;\n            }\n\n            void main () {\n\n                vec2 sampledCovarianceA = texture(covariancesTexture, getDataUV(3, 0, covariancesTextureSize)).rg;\n                vec2 sampledCovarianceB = texture(covariancesTexture, getDataUV(3, 1, covariancesTextureSize)).rg;\n                vec2 sampledCovarianceC = texture(covariancesTexture, getDataUV(3, 2, covariancesTextureSize)).rg;\n\n                vec3 cov3D_M11_M12_M13 = vec3(sampledCovarianceA.rg, sampledCovarianceB.r);\n                vec3 cov3D_M22_M23_M33 = vec3(sampledCovarianceB.g, sampledCovarianceC.rg);\n\n                uvec4 sampledCenterColor = texture(centersColorsTexture, getDataUV(1, 0, centersColorsTextureSize));\n                vec3 splatCenter = uintBitsToFloat(uvec3(sampledCenterColor.gba));\n                vColor = uintToRGBAVec(sampledCenterColor.r);\n\n                vPosition = position.xy * 2.0;\n\n                vec4 viewCenter = modelViewMatrix * vec4(splatCenter, 1.0);\n                vec4 clipCenter = projectionMatrix * viewCenter;\n\n                float bounds = 1.2 * clipCenter.w;\n                if (clipCenter.z < -clipCenter.w || clipCenter.x < -bounds || clipCenter.x > bounds\n                    || clipCenter.y < -bounds || clipCenter.y > bounds) {\n                    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n                    return;\n                }\n\n                // Compute the 2D covariance matrix from the upper-right portion of the 3D covariance matrix\n                mat3 Vrk = mat3(\n                    cov3D_M11_M12_M13.x, cov3D_M11_M12_M13.y, cov3D_M11_M12_M13.z,\n                    cov3D_M11_M12_M13.y, cov3D_M22_M23_M33.x, cov3D_M22_M23_M33.y,\n                    cov3D_M11_M12_M13.z, cov3D_M22_M23_M33.y, cov3D_M22_M23_M33.z\n                );\n                mat3 J = mat3(\n                    focal.x / viewCenter.z, 0., -(focal.x * viewCenter.x) / (viewCenter.z * viewCenter.z),\n                    0., focal.y / viewCenter.z, -(focal.y * viewCenter.y) / (viewCenter.z * viewCenter.z),\n                    0., 0., 0.\n                );\n                mat3 W = transpose(mat3(modelViewMatrix));\n                mat3 T = W * J;\n                mat3 cov2Dm = transpose(T) * Vrk * T;\n                cov2Dm[0][0] += 0.3;\n                cov2Dm[1][1] += 0.3;\n\n                // We are interested in the upper-left 2x2 portion of the projected 3D covariance matrix because\n                // we only care about the X and Y values. We want the X-diagonal, cov2Dm[0][0],\n                // the Y-diagonal, cov2Dm[1][1], and the correlation between the two cov2Dm[0][1]. We don't\n                // need cov2Dm[1][0] because it is a symetric matrix.\n                vec3 cov2Dv = vec3(cov2Dm[0][0], cov2Dm[0][1], cov2Dm[1][1]);\n\n                vec3 ndcCenter = clipCenter.xyz / clipCenter.w;\n\n                // We now need to solve for the eigen-values and eigen vectors of the 2D covariance matrix\n                // so that we can determine the 2D basis for the splat. This is done using the method described\n                // here: https://people.math.harvard.edu/~knill/teaching/math21b2004/exhibits/2dmatrices/index.html\n                //\n                // This is a different approach than in the original work at INRIA. In that work they compute the\n                // max extents of the 2D covariance matrix in screen space to form an axis aligned bounding rectangle\n                // which forms the geometry that is actually rasterized. They then use the inverse 2D covariance\n                // matrix (called 'conic') to determine fragment opacity.\n                float a = cov2Dv.x;\n                float d = cov2Dv.z;\n                float b = cov2Dv.y;\n                float D = a * d - b * b;\n                float trace = a + d;\n                float traceOver2 = 0.5 * trace;\n                float term2 = sqrt(trace * trace / 4.0 - D);\n                float eigenValue1 = traceOver2 + term2;\n                float eigenValue2 = max(traceOver2 - term2, 0.0); // prevent negative eigen value\n\n                const float maxSplatSize = 512.0;\n                vec2 eigenVector1 = normalize(vec2(b, eigenValue1 - a));\n                // since the eigen vectors are orthogonal, we derive the second one from the first\n                vec2 eigenVector2 = vec2(eigenVector1.y, -eigenVector1.x);\n                vec2 basisVector1 = eigenVector1 * min(sqrt(2.0 * eigenValue1), maxSplatSize);\n                vec2 basisVector2 = eigenVector2 * min(sqrt(2.0 * eigenValue2), maxSplatSize);\n\n                vec2 ndcOffset = vec2(vPosition.x * basisVector1 + vPosition.y * basisVector2) / viewport * 2.0;\n\n                gl_Position = vec4(ndcCenter.xy + ndcOffset, ndcCenter.z, 1.0);\n\n            }",fragmentShader:"\n            precision highp float;\n            #include <common>\n\n            uniform vec3 debugColor;\n\n            varying vec4 vColor;\n            varying vec2 vUv;\n\n            varying vec2 vPosition;\n\n            void main () {\n                // compute the negative squared distance from the center of the splat to the\n                // current fragment in the splat's local space.\n                float A = -dot(vPosition, vPosition);\n                if (A < -4.0) discard;\n                vec3 color = vColor.rgb;\n                A = exp(A) * vColor.a;\n                gl_FragColor = vec4(color.rgb, A);\n            }",transparent:!0,alphaTest:1,blending:o.NormalBlending,depthTest:!0,depthWrite:!1,side:o.DoubleSide})}static buildGeomtery(e){const t=e.getSplatCount(),n=new o.BufferGeometry,s=new Float32Array(18),r=new o.BufferAttribute(s,3);n.setAttribute("position",r),r.setXYZ(2,-1,1,0),r.setXYZ(1,-1,-1,0),r.setXYZ(0,1,1,0),r.setXYZ(5,-1,-1,0),r.setXYZ(4,1,-1,0),r.setXYZ(3,1,1,0),r.needsUpdate=!0;const i=(new o.InstancedBufferGeometry).copy(n),a=new Uint32Array(t),c=new o.InstancedBufferAttribute(a,1,!1);return c.setUsage(o.DynamicDrawUsage),i.setAttribute("splatIndex",c),i.instanceCount=t,i}buildSplatTree(){this.splatTree=new O(8,5e3),console.time("SplatTree build");const e=new o.Vector4;this.splatTree.processSplatBuffer(this.splatBuffer,(t=>(this.splatBuffer.getColor(t,e),e.w>this.splatAlphaRemovalThreshold))),console.timeEnd("SplatTree build");let t=0,n=0,s=0,r=0;this.splatTree.visitLeaves((e=>{const o=e.data.indexes.length;o>0&&(n+=o,s=Math.max(s,o),r++,t++)})),console.log(`SplatTree leaves: ${this.splatTree.countLeaves()}`),console.log(`SplatTree leaves with splats:${t}`),n/=r,console.log(`Avg splat count per node: ${n}`)}getSplatTree(){return this.splatTree}resetLocalSplatDataAndTexturesFromSplatBuffer(){this.updateLocalSplatDataFromSplatBuffer(),this.allocateAndStoreLocalSplatDataInTextures()}updateLocalSplatDataFromSplatBuffer(){const e=this.splatBuffer.getSplatCount();this.covariances=new Float32Array(this.splatBuffer.getPrecomputedCovarianceBufferData()),this.colors=new Uint8Array(4*e),this.centers=new Float32Array(3*e),this.splatBuffer.fillPositionArray(this.centers),this.splatBuffer.fillColorArray(this.colors)}allocateAndStoreLocalSplatDataInTextures(){const e=this.splatBuffer.getSplatCount(),t=new o.Vector2(4096,1024);for(;t.x*t.y*2<6*e;)t.y*=2;const n=new o.Vector2(4096,1024);for(;n.x*n.y*4<4*e;)n.y*=2;let s,r;if(this.halfPrecisionCovariancesOnGPU){r=new Uint16Array(t.x*t.y*2);for(let e=0;e<this.covariances.length;e++)r[e]=o.DataUtils.toHalfFloat(this.covariances[e]);s=new o.DataTexture(r,t.x,t.y,o.RGFormat,o.HalfFloatType)}else r=new Float32Array(t.x*t.y*2),r.set(this.covariances),s=new o.DataTexture(r,t.x,t.y,o.RGFormat,o.FloatType);s.needsUpdate=!0,this.material.uniforms.covariancesTexture.value=s,this.material.uniforms.covariancesTextureSize.value.copy(t);const i=new Uint32Array(n.x*n.y*4);for(let t=0;t<e;t++){const e=4*t,n=3*t,o=4*t;i[o]=(a=this.colors[e],c=this.colors[e+1],l=this.colors[e+2],h=this.colors[e+3],a+(c<<8)+(l<<16)+(h<<24)),i[o+1]=d(this.centers[n]),i[o+2]=d(this.centers[n+1]),i[o+3]=d(this.centers[n+2])}var a,c,l,h;const p=new o.DataTexture(i,n.x,n.y,o.RGBAIntegerFormat,o.UnsignedIntType);p.internalFormat="RGBA32UI",p.needsUpdate=!0,this.material.uniforms.centersColorsTexture.value=p,this.material.uniforms.centersColorsTextureSize.value.copy(n),this.material.uniformsNeedUpdate=!0,this.splatDataTextures={covariances:{data:r,texture:s,size:t},centerColors:{data:i,texture:p,size:n}}}updateSplatDataToDataTextures(){this.updateLocalCovarianceDataToDataTexture(),this.updateLocalCenterColorDataToDataTexture()}updateLocalCovarianceDataToDataTexture(){this.splatDataTextures.covariances.data.set(this.covariances),this.splatDataTextures.covariances.texture.needsUpdate=!0}updateLocalCenterColorDataToDataTexture(){this.splatDataTextures.centerColors.data.set(this.centerColors),this.splatDataTextures.centerColors.texture.needsUpdate=!0}updateIndexes(e,t){const n=this.geometry;n.attributes.splatIndex.set(e),n.attributes.splatIndex.needsUpdate=!0,n.instanceCount=t}updateUniforms(e,t){this.splatBuffer.getSplatCount()>0&&(this.material.uniforms.viewport.value.set(e.x,e.y),this.material.uniforms.focal.value.set(t,t),this.material.uniformsNeedUpdate=!0)}getSplatDataTextures(){return this.splatDataTextures}getSplatCount(){return this.splatBuffer.getSplatCount()}getCenters(){return this.centers}getColors(){return this.colors}getCovariances(){return this.covariances}}class _{static DepthMapRange=65536;static MemoryPageSize=65536;static BytesPerFloat=4;static BytesPerInt=4}function N(e){let t,n,o,s,r,i,a,c,l,h,p;e.onmessage=u=>{if(u.data.positions){l=u.data.positions;const t=new Float32Array(l),o=new Int32Array(3*n);for(let e=0;e<3*n;e++)o[e]=Math.round(1e3*t[e]);new Int32Array(c,s,3*n).set(o),e.postMessage({sortSetupComplete:!0})}else if(u.data.sort){const l=u.data.sort.splatRenderCount||0;!function(l,u,d,m){const f=performance.now();h||(h=new Uint32Array(p.DepthMapRange));const y=new Int32Array(c,r,16);for(let e=0;e<16;e++)y[e]=Math.round(1e3*d[e]);new Uint32Array(c,a+4*n,p.DepthMapRange).set(h),t.exports.sortIndexes(o,s,a,r,i,m[0],m[1],m[2],p.DepthMapRange,l,u,n);const g=performance.now();e.postMessage({sortDone:!0,splatSortCount:l,splatRenderCount:u,sortTime:g-f})}(u.data.sort.splatSortCount||0,l,u.data.sort.view,u.data.sort.cameraPosition,u.data.sort.inIndexBuffer)}else if(u.data.init){p=u.data.init.Constants,n=u.data.init.splatCount;const l=p.BytesPerInt,h=3*p.BytesPerFloat,d=new Uint8Array(u.data.init.sorterWasmBytes),m=n*(l+h)+(n*p.BytesPerInt*2+p.DepthMapRange*p.BytesPerInt*2)+32*p.MemoryPageSize,f=Math.floor(m/p.MemoryPageSize)+1,y={module:{},env:{memory:new WebAssembly.Memory({initial:2*f,maximum:3*f,shared:!0})}};WebAssembly.compile(d).then((e=>WebAssembly.instantiate(e,y))).then((u=>{t=u,o=0,s=n*l,r=s+n*h,a=r+16*p.BytesPerFloat,i=a+n*p.BytesPerInt+p.DepthMapRange*p.BytesPerInt*2,c=y.env.memory.buffer,e.postMessage({sortSetupPhase1Complete:!0,inIndexBuffer:c,inIndexOffset:0,outIndexBuffer:c,outIndexOffset:i})}))}}}e.PlyLoader=A,e.PlyParser=C,e.SplatLoader=w,e.Viewer=class{constructor(e={}){e.cameraUp||(e.cameraUp=[0,1,0]),e.initialCameraPosition||(e.initialCameraPosition=[0,10,15]),e.initialCameraLookAt||(e.initialCameraLookAt=[0,0,0]),void 0===e.selfDrivenMode&&(e.selfDrivenMode=!0),void 0===e.useBuiltInControls&&(e.useBuiltInControls=!0),this.rootElement=e.rootElement,this.usingExternalCamera=!!e.camera,this.usingExternalRenderer=!!e.renderer,this.cameraUp=(new o.Vector3).fromArray(e.cameraUp),this.initialCameraPosition=(new o.Vector3).fromArray(e.initialCameraPosition),this.initialCameraLookAt=(new o.Vector3).fromArray(e.initialCameraLookAt),this.scene=e.scene,this.simpleScene=e.simpleScene,this.renderer=e.renderer,this.camera=e.camera,this.useBuiltInControls=e.useBuiltInControls,this.controls=null,this.selfDrivenMode=e.selfDrivenMode,this.selfDrivenUpdateFunc=this.selfDrivenUpdate.bind(this),this.showMeshCursor=!1,this.showInfo=!1,this.sceneHelper=null,this.sortWorker=null,this.splatRenderCount=0,this.splatSortCount=0,this.inIndexArray=null,this.splatMesh=null,this.sortRunning=!1,this.selfDrivenModeRunning=!1,this.splatRenderingInitialized=!1,this.raycaster=new V,this.infoPanel=null,this.infoPanelCells={},this.currentFPS=0,this.lastSortTime=0,this.previousCameraTarget=new o.Vector3,this.nextCameraTarget=new o.Vector3,this.mousePosition=new o.Vector2,this.mouseDownPosition=new o.Vector2,this.mouseDownTime=null,window.addEventListener("mousemove",this.onMouseMove.bind(this)),window.addEventListener("mousedown",this.onMouseDown.bind(this)),window.addEventListener("mouseup",this.onMouseUp.bind(this)),window.addEventListener("keydown",this.onKeyDown.bind(this))}onKeyDown(e){switch(e.code){case"KeyC":this.showMeshCursor=!this.showMeshCursor;break;case"KeyI":this.showInfo=!this.showInfo,this.showInfo?this.infoPanel.style.display="block":this.infoPanel.style.display="none"}}onMouseMove(e){this.mousePosition.set(e.offsetX,e.offsetY)}onMouseDown(){this.mouseDownPosition.copy(this.mousePosition),this.mouseDownTime=y()}onMouseUp=function(){const e=new o.Vector2,t=new o.Vector2,n=[];return function(o){t.copy(this.mousePosition).sub(this.mouseDownPosition);const s=y()-this.mouseDownTime<.5&&t.length()<2;!this.transitioningCameraTarget&&s&&(this.getRenderDimensions(e),n.length=0,this.raycaster.setFromCameraAndScreenPosition(this.camera,this.mousePosition,e),this.mousePosition.set(o.offsetX,o.offsetY),this.raycaster.intersectSplatMesh(this.splatMesh,n),n.length>0&&(this.previousCameraTarget.copy(this.controls.target),this.nextCameraTarget.copy(n[0].origin),this.transitioningCameraTarget=!0,this.transitioningCameraTargetStartTime=y()))}}();getRenderDimensions(e){this.rootElement?(e.x=this.rootElement.offsetWidth,e.y=this.rootElement.offsetHeight):this.renderer.getSize(e)}init(){this.setupInfoPanel(),this.rootElement||this.usingExternalRenderer||(this.rootElement=document.createElement("div"),this.rootElement.style.width="100%",this.rootElement.style.height="100%",document.body.appendChild(this.rootElement));const e=new o.Vector2;if(this.getRenderDimensions(e),this.usingExternalCamera||(this.camera=new o.PerspectiveCamera(60,e.x/e.y,.1,500),this.camera.position.copy(this.initialCameraPosition),this.camera.lookAt(this.initialCameraLookAt),this.camera.up.copy(this.cameraUp).normalize()),this.scene=this.scene||new o.Scene,this.simpleScene=this.simpleScene||new o.Scene,this.sceneHelper=new B(this.scene,this.simpleScene),this.sceneHelper.setupMeshCursor(),this.usingExternalRenderer||(this.renderer=new o.WebGLRenderer({antialias:!1,precision:"highp"}),this.renderer.autoClear=!0,this.renderer.setClearColor(0,0,0,0),this.renderer.setSize(e.x,e.y)),this.setupRenderTargetCopyObjects(),this.useBuiltInControls&&(this.controls=new D(this.camera,this.renderer.domElement),this.controls.rotateSpeed=.3,this.controls.maxPolarAngle=.75*Math.PI,this.controls.minPolarAngle=.1,this.controls.enableDamping=!0,this.controls.dampingFactor=.05,this.controls.target.copy(this.initialCameraLookAt)),!this.usingExternalRenderer){new ResizeObserver((()=>{this.getRenderDimensions(e),this.renderer.setSize(e.x,e.y)})).observe(this.rootElement),this.rootElement.appendChild(this.renderer.domElement)}this.setupSimpleObjectDepthOverrideMaterial()}setupInfoPanel(){this.infoPanel=document.createElement("div"),this.infoPanel.style.position="absolute",this.infoPanel.style.padding="10px",this.infoPanel.style.backgroundColor="#cccccc",this.infoPanel.style.border="#aaaaaa 1px solid",this.infoPanel.style.zIndex=100,this.infoPanel.style.width="375px",this.infoPanel.style.fontFamily="arial",this.infoPanel.style.fontSize="10pt";const e=[["Camera position","cameraPosition"],["Camera look-at","cameraLookAt"],["Cursor position","cursorPosition"],["FPS","fps"],["Render window","renderWindow"],["Rendering:","renderSplatCount"],["Sort time","sortTime"]],t=document.createElement("div");t.style.display="table";for(let n of e){const e=document.createElement("div");e.style.display="table-row";const o=document.createElement("div");o.style.display="table-cell",o.style.width="110px",o.innerHTML=`${n[0]}: `;const s=document.createElement("div");s.style.display="table-cell",s.style.width="10px",s.innerHTML=" ";const r=document.createElement("div");r.style.display="table-cell",r.innerHTML="",this.infoPanelCells[n[1]]=r,e.appendChild(o),e.appendChild(s),e.appendChild(r),t.appendChild(e)}this.infoPanel.appendChild(t),this.infoPanel.style.display="none",document.body.appendChild(this.infoPanel)}updateSplatRenderTargetForRenderDimensions(e,t){this.splatRenderTarget=new o.WebGLRenderTarget(e,t,{format:o.RGBAFormat,stencilBuffer:!1,depthBuffer:!0}),this.splatRenderTarget.depthTexture=new o.DepthTexture(e,t),this.splatRenderTarget.depthTexture.format=o.DepthFormat,this.splatRenderTarget.depthTexture.type=o.UnsignedIntType}setupSimpleObjectDepthOverrideMaterial(){this.simpleObjectDepthOverrideMaterial=new o.ShaderMaterial({vertexShader:"\n                #include <common>\n                void main() {\n                    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position.xyz, 1.0);   \n                }\n            ",fragmentShader:"\n                #include <common>\n                void main() {\n                    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n              }\n            ",depthWrite:!0,depthTest:!0,transparent:!1})}setupRenderTargetCopyObjects(){this.renderTargetCopyMaterial=new o.ShaderMaterial({vertexShader:"\n                varying vec2 vUv;\n                void main() {\n                    vUv = uv;\n                    gl_Position = vec4( position.xy, 0.0, 1.0 );    \n                }\n            ",fragmentShader:"\n                #include <common>\n                #include <packing>\n                varying vec2 vUv;\n                uniform sampler2D sourceColorTexture;\n                uniform sampler2D sourceDepthTexture;\n                void main() {\n                    vec4 color = texture2D(sourceColorTexture, vUv);\n                    float fragDepth = texture2D(sourceDepthTexture, vUv).x;\n                    gl_FragDepth = fragDepth;\n                    gl_FragColor = vec4(color.rgb, color.a * 2.0);\n              }\n            ",uniforms:{sourceColorTexture:{type:"t",value:null},sourceDepthTexture:{type:"t",value:null}},depthWrite:!1,depthTest:!1,transparent:!0,blending:o.CustomBlending,blendSrc:o.SrcAlphaFactor,blendSrcAlpha:o.SrcAlphaFactor,blendDst:o.OneMinusSrcAlphaFactor,blendDstAlpha:o.OneMinusSrcAlphaFactor}),this.renderTargetCopyMaterial.extensions.fragDepth=!0,this.renderTargetCopyQuad=new o.Mesh(new o.PlaneGeometry(2,2),this.renderTargetCopyMaterial),this.renderTargetCopyCamera=new o.OrthographicCamera(-1,1,1,-1,0,1)}updateSplatMeshUniforms=function(){const e=new o.Vector2;return function(){this.splatMesh.getSplatCount()>0&&(this.getRenderDimensions(e),this.cameraFocalLength=e.y/2/Math.tan(this.camera.fov/2*o.MathUtils.DEG2RAD),this.splatMesh.updateUniforms(e,this.cameraFocalLength))}}();loadFile(e,t={}){t.position&&(t.position=(new o.Vector3).fromArray(t.position)),t.orientation&&(t.orientation=(new o.Quaternion).fromArray(t.orientation)),t.splatAlphaRemovalThreshold=t.splatAlphaRemovalThreshold||1,t.halfPrecisionCovariancesOnGPU=!!t.halfPrecisionCovariancesOnGPU;const n=new T;n.show();const s=(e,t)=>{100==e?n.setMessage("Download complete!"):t?n.setMessage(`Downloading: ${t}`):n.setMessage("Downloading...")};return new Promise(((o,r)=>{let i;e.endsWith(".splat")?i=(new w).loadFromURL(e,s):e.endsWith(".ply")?i=(new A).loadFromURL(e,s):r(new Error(`Viewer::loadFile -> File format not supported: ${e}`)),i.then((e=>{n.setMessage("Processing splats..."),window.setTimeout((()=>{this.setupSplatMesh(e,t.splatAlphaRemovalThreshold,t.position,t.orientation,t.halfPrecisionCovariancesOnGPU),this.setupSortWorker(e).then((()=>{n.hide(),o()}))}),1)})).catch((t=>{r(new Error(`Viewer::loadFile -> Could not load file ${e}`))}))}))}setupSplatMesh(e,t=1,n=new o.Vector3,s=new o.Quaternion,r=!1){const i=e.getSplatCount();console.log(`Splat count: ${i}`),e.buildPreComputedBuffers(),this.splatMesh=k.buildMesh(e,t,r),this.splatMesh.position.copy(n),this.splatMesh.quaternion.copy(s),this.splatMesh.frustumCulled=!1,this.splatMesh.renderOrder=10,this.updateSplatMeshUniforms(),this.splatRenderCount=i}setupSortWorker(e){return new Promise((t=>{const n=e.getSplatCount();this.sortWorker=function(e){const t=new Worker(URL.createObjectURL(new Blob(["(",N.toString(),")(self)"],{type:"application/javascript"}))),n=atob("AGFzbQEAAAAADAZkeWxpbmsAAAAAAAEXA2AAAGAMf39/f399fX1/f39/AGAAAX8CEgEDZW52Bm1lbW9yeQIDAICABAMEAwABAgc5AxFfX3dhc21fY2FsbF9jdG9ycwAAC3NvcnRJbmRleGVzAAETZW1zY3JpcHRlbl90bHNfaW5pdAACCqAEAwMAAQuUBAEFfwJAIAogCWsiDiAKSSIQBEBB+P///wchDEGIgICAeCEPIA4hDQNAIAIgDUECdCIJaiABIAAgCWooAgBBDGxqIgkoAgQgAygCGGwgCSgCACADKAIIbGogCSgCCCADKAIobGoiCTYCACAJIAwgCSAMSBshDCAJIA8gCSAPShshDyANQQFqIg0gCkcNAAsgAiALQQJ0aiENIAizIA+yIAyyk5UhBSAQRQ0BIA4hCQNAIA0CfyAFIAIgCUECdGooAgAgDGuylCIGi0MAAABPXQRAIAaoDAELQYCAgIB4C0ECdGoiASABKAIAQQFqNgIAIAlBAWoiCSAKRw0ACwwBCyACIAtBAnRqIQ0gCLNDAACAr5QhBUH4////ByEMCyAIQQJPBEAgDSgCACEDQQEhCQNAIAIgCSALakECdGoiASABKAIAIANqIgM2AgAgCUEBaiIJIAhHDQALCyAOQQBKBEAgDiEJA0AgBCAJQQFrIgFBAnQiA2ogACADaigCADYCACAJQQFKIQMgASEJIAMNAAsLIA4gCkEBayIBTARAIAEhCQNAIAQgASACAn8gBSACIAlBAnQiA2ooAgAgDGuylCIGi0MAAABPXQRAIAaoDAELQYCAgIB4CyALakECdGoiCCgCAEEBayIKa0ECdGogACADaigCADYCACAIIAo2AgAgCSAOSiEDIAlBAWshCSADDQALCwsEAEEACw=="),o=new Uint8Array(n.length);for(let e=0;e<n.length;e++)o[e]=n.charCodeAt(e);return t.postMessage({init:{sorterWasmBytes:o.buffer,splatCount:e,Constants:{BytesPerFloat:_.BytesPerFloat,BytesPerInt:_.BytesPerInt,DepthMapRange:_.DepthMapRange,MemoryPageSize:_.MemoryPageSize}}}),t}(n),this.sortWorker.onmessage=o=>{if(o.data.sortDone)this.sortRunning=!1,this.splatMesh.updateIndexes(this.outIndexArray,o.data.splatRenderCount),this.lastSortTime=o.data.sortTime;else if(o.data.sortCanceled)this.sortRunning=!1;else if(o.data.sortSetupPhase1Complete){console.log("Sorting web worker WASM setup complete."),this.sortWorker.postMessage({positions:this.splatMesh.getCenters().buffer}),this.outIndexArray=new Uint32Array(o.data.outIndexBuffer,o.data.outIndexOffset,e.getSplatCount()),this.inIndexArray=new Uint32Array(o.data.inIndexBuffer,o.data.inIndexOffset,e.getSplatCount());for(let e=0;e<n;e++)this.inIndexArray[e]=e}else if(o.data.sortSetupComplete){console.log("Sorting web worker ready."),this.splatMesh.updateIndexes(this.outIndexArray,e.getSplatCount());const n=this.splatMesh.getSplatDataTextures(),o=n.covariances.size,s=n.centerColors.size;console.log("Covariances texture size: "+o.x+" x "+o.y),console.log("Centers/colors texture size: "+s.x+" x "+s.y),this.updateView(!0,!0),this.splatRenderingInitialized=!0,t()}}}))}gatherSceneNodes=function(){const e=[],t=new o.Vector3,n=new o.Vector3,s=new o.Vector3,r=new o.Matrix4,i=new o.Vector3,a=new o.Vector3(0,0,-1),c=new o.Vector3,l=e=>c.copy(e.max).sub(e.min).length();return function(o){this.getRenderDimensions(i);const c=Math.atan(i.x/2/this.cameraFocalLength),h=Math.atan(i.y/2/this.cameraFocalLength),p=Math.cos(c),u=Math.cos(h);r.copy(this.camera.matrixWorld).invert(),r.multiply(this.splatMesh.matrixWorld);const d=this.splatMesh.getSplatTree();let m=0,f=0;const y=d.nodesWithIndexes.length;for(let i=0;i<y;i++){const c=d.nodesWithIndexes[i];s.copy(c.center).applyMatrix4(r);const h=s.length();s.normalize(),t.copy(s).setX(0).normalize(),n.copy(s).setY(0).normalize();const y=a.dot(n),g=a.dot(t),C=l(c);!o&&(y<p-.5||g<u-.5||h>150)&&h>C||(f+=c.data.indexes.length,e[m]=c,c.data.distanceToNode=h,m++)}e.length=m,e.sort(((e,t)=>e.data.distanceToNode>t.data.distanceToNode?1:-1)),this.splatRenderCount=f,this.splatSortCount=0;let g=f*_.BytesPerInt;for(let t=0;t<m;t++){const n=e[t];n.data.distanceToNode<=125&&(this.splatSortCount+=n.data.indexes.length);const o=n.data.indexes.length,s=o*_.BytesPerInt;new Uint32Array(this.inIndexArray.buffer,g-s,o).set(n.data.indexes),g-=s}}}();start(){if(!this.selfDrivenMode)throw new Error("Cannot start viewer unless it is in self driven mode.");requestAnimationFrame(this.selfDrivenUpdateFunc),this.selfDrivenModeRunning=!0}updateFPS=function(){let e=y(),t=0;return function(){const n=y();n-e>=1?(this.currentFPS=t,t=0,e=n):t++}}();updateForRendererSizeChanges=function(){const e=new o.Vector2,t=new o.Vector2;return function(){this.renderer.getSize(t),t.x===e.x&&t.y===e.y||(this.usingExternalCamera||(this.camera.aspect=t.x/t.y,this.camera.updateProjectionMatrix()),this.splatRenderingInitialized&&(this.updateSplatMeshUniforms(),this.updateSplatRenderTargetForRenderDimensions(t.x,t.y)),e.copy(t))}}();selfDrivenUpdate(){this.selfDrivenMode&&requestAnimationFrame(this.selfDrivenUpdateFunc),this.update(),this.render()}update(){this.controls&&this.controls.update(),this.updateView(),this.updateForRendererSizeChanges(),this.rayCastScene(),this.updateFPS(),this.timingSensitiveUpdates(),this.updateInfo()}timingSensitiveUpdates=function(){let e,t=new o.Vector3;return function(){const n=y();if(e||(e=n),this.transitioningCameraTarget){const e=(n-this.transitioningCameraTargetStartTime)/.25;t.copy(this.previousCameraTarget).lerp(this.nextCameraTarget,e),this.camera.lookAt(t),this.controls.target.copy(t),e>=1&&(this.transitioningCameraTarget=!1)}e=n}}();rayCastScene=function(){const e=[],t=new o.Vector2;return function(){this.showMeshCursor?(this.getRenderDimensions(t),e.length=0,this.raycaster.setFromCameraAndScreenPosition(this.camera,this.mousePosition,t),this.raycaster.intersectSplatMesh(this.splatMesh,e),e.length>0?(this.sceneHelper.setMeshCursorVisibility(!0),this.sceneHelper.positionAndOrientMeshCursor(e[0].origin,this.camera)):this.sceneHelper.setMeshCursorVisibility(!1)):this.sceneHelper.setMeshCursorVisibility(!1)}}();updateInfo=function(){const e=new o.Vector2;return function(){if(this.showInfo){const t=this.splatMesh.getSplatCount();this.getRenderDimensions(e);const n=this.camera.position,o=`[${n.x.toFixed(5)}, ${n.y.toFixed(5)}, ${n.z.toFixed(5)}]`;this.infoPanelCells.cameraPosition.innerHTML=o;const s=this.controls.target,r=`[${s.x.toFixed(5)}, ${s.y.toFixed(5)}, ${s.z.toFixed(5)}]`;if(this.infoPanelCells.cameraLookAt.innerHTML=r,this.showMeshCursor){const e=this.sceneHelper.meshCursor.position,t=`[${e.x.toFixed(5)}, ${e.y.toFixed(5)}, ${e.z.toFixed(5)}]`;this.infoPanelCells.cursorPosition.innerHTML=t}else this.infoPanelCells.cursorPosition.innerHTML="N/A";this.infoPanelCells.fps.innerHTML=this.currentFPS,this.infoPanelCells.renderWindow.innerHTML=`${e.x} x ${e.y}`;const i=this.splatRenderCount/t*100;this.infoPanelCells.renderSplatCount.innerHTML=`${this.splatRenderCount} splats out of ${t} (${i.toFixed(2)}%)`,this.infoPanelCells.sortTime.innerHTML=`${this.lastSortTime.toFixed(3)} ms`}}}();render(){const e=e=>{for(let t of e.children)if(t.visible)return!0;return!1};let t=e(this.scene),n=e(this.simpleScene);if(t||n){const e=this.renderer.autoClear;this.renderer.autoClear=!1,t&&this.renderer.render(this.scene,this.camera),n&&this.renderer.render(this.simpleScene,this.camera),this.renderer.render(this.splatMesh,this.camera),this.renderer.autoClear=e}else this.renderer.render(this.splatMesh,this.camera)}updateView=function(){const e=new o.Matrix4,t=[],n=new o.Vector3(0,0,-1),s=new o.Vector3(0,0,-1),r=new o.Vector3,i=new o.Vector3;return function(o=!1,a=!1){if(!o){s.set(0,0,-1).applyQuaternion(this.camera.quaternion);let e=!1,t=!1;if(s.dot(n)<=.95&&(e=!0),i.copy(this.camera.position).sub(r).length()>=1&&(t=!0),!e&&!t)return}e.copy(this.camera.matrixWorld).invert(),e.premultiply(this.camera.projectionMatrix),e.multiply(this.splatMesh.matrixWorld),t[0]=this.camera.position.x,t[1]=this.camera.position.y,t[2]=this.camera.position.z,this.sortRunning||(this.gatherSceneNodes(a),this.sortRunning=!0,this.sortWorker.postMessage({sort:{view:e.elements,cameraPosition:t,splatRenderCount:this.splatRenderCount,splatSortCount:this.splatSortCount,inIndexBuffer:this.inIndexArray.buffer}}),r.copy(this.camera.position),n.copy(s))}}();getSplatMesh(){return this.splatMesh}}}));
//# sourceMappingURL=gaussian-splats-3d.umd.min.cjs.map
